// -----------------------------------------------------------------------------
// Global functions for variables
//
// These functions are required whenever loading variables. It must be loaded
// first because it contains functions that we use to calculate rem sizes based
// on pixel values.
// -----------------------------------------------------------------------------

// This is the default html and body font-size for the base rem value.
$ds-rem-base: 16px !default;


// -----------------------------------------------------------------------------
// Strip unit
// It strips the unit of measure and returns it
// -----------------------------------------------------------------------------
@function ds-strip-unit($num) {
  @return $num / ($num * 0 + 1);
}


// -----------------------------------------------------------------------------
// Rem calc
//
// New Syntax, allows to optionally calculate on a different base value to
// counter compounding effect of rem's.
// Call with 1, 2, 3 or 4 parameters, 'px' is not required but supported:
//
//   ds-rem(10 20 30px 40);
//
// Space delimited, if you want to delimit using comma's, wrap it in another
// pair of brackets.
//
//   ds-rem((10, 20, 30, 40px));
//
// Optionally call with a different base (eg: 8px) to calculate rem.
//
//   ds-rem(16px 32px 48px, 8px);
//
// If you require to comma separate your list
//
//   ds-rem((16px, 32px, 48), 8px);
// -----------------------------------------------------------------------------
@function ds-emrem-calc($values, $base-value: $ds-rem-base, $type: 'em') {
  $max: length($values);
  $newValues: ();
  @if($type == 'em') { $type: 1em; }
  @else { $type: 1rem; }
  @for $i from 1 through $max {
    $newValues: append($newValues, ds-strip-unit(nth($values, $i)) / ds-strip-unit($base-value) * $type);
  }
  @return $newValues;
}

@function ds-em($values, $base-value: $ds-rem-base) {
  @return ds-emrem-calc($values, $ds-rem-base, 'em');
}

@function ds-rem($values, $base-value: $ds-rem-base) {
  @return ds-emrem-calc($values, $ds-rem-base, 'rem');
}



// -----------------------------------------------------------------------------
// Text
// -----------------------------------------------------------------------------

$ds-font-family: sans-serif !default;
$ds-font-family-complementary: serif !default;
$ds-font-size: 100% !default;
$ds-font-size-body-copy: ds-rem(16) !default;
$ds-font-size-small: ds-rem(12) !default;
$ds-font-smoothing: antialiased !default;
$ds-font-style: normal !default;
$ds-font-weight-extra-light: 100 !default;
$ds-font-weight-light: 200 !default;
$ds-font-weight-book: 300 !default;
$ds-font-weight: 400 !default;
$ds-font-weight-medium: 500 !default;
$ds-font-weight-bold: 600 !default;
$ds-font-weight-extra-bold: 700 !default;
$ds-line-height: 1.5 !default;


// -----------------------------------------------------------------------------
// Headings
//
// Helpful resource:
// http://typecast.com/blog/a-more-modern-scale-for-web-typography
// -----------------------------------------------------------------------------

$ds-h1-font-size: ds-rem(60) !default;
$ds-h2-font-size: ds-rem(36) !default;
$ds-h3-font-size: ds-rem(26) !default;
$ds-h4-font-size: ds-rem(20) !default;
$ds-h5-font-size: ds-rem(16) !default;
$ds-h6-font-size: ds-rem(14) !default;
$ds-headings-line-height: 1.4 !default;


// -----------------------------------------------------------------------------
// Margins
// -----------------------------------------------------------------------------

$ds-type-margin: ds-rem(20) !default;
